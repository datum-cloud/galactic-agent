// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.12
// source: remote.proto

package remote

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Route_Status int32

const (
	Route_ADD    Route_Status = 0
	Route_DELETE Route_Status = 1
)

// Enum value maps for Route_Status.
var (
	Route_Status_name = map[int32]string{
		0: "ADD",
		1: "DELETE",
	}
	Route_Status_value = map[string]int32{
		"ADD":    0,
		"DELETE": 1,
	}
)

func (x Route_Status) Enum() *Route_Status {
	p := new(Route_Status)
	*p = x
	return p
}

func (x Route_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Route_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_remote_proto_enumTypes[0].Descriptor()
}

func (Route_Status) Type() protoreflect.EnumType {
	return &file_remote_proto_enumTypes[0]
}

func (x Route_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Route_Status.Descriptor instead.
func (Route_Status) EnumDescriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{3, 0}
}

type Envelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Envelope_Register
	//	*Envelope_Deregister
	//	*Envelope_Route
	Kind          isEnvelope_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_remote_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetKind() isEnvelope_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Envelope) GetRegister() *Register {
	if x != nil {
		if x, ok := x.Kind.(*Envelope_Register); ok {
			return x.Register
		}
	}
	return nil
}

func (x *Envelope) GetDeregister() *Deregister {
	if x != nil {
		if x, ok := x.Kind.(*Envelope_Deregister); ok {
			return x.Deregister
		}
	}
	return nil
}

func (x *Envelope) GetRoute() *Route {
	if x != nil {
		if x, ok := x.Kind.(*Envelope_Route); ok {
			return x.Route
		}
	}
	return nil
}

type isEnvelope_Kind interface {
	isEnvelope_Kind()
}

type Envelope_Register struct {
	Register *Register `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type Envelope_Deregister struct {
	Deregister *Deregister `protobuf:"bytes,2,opt,name=deregister,proto3,oneof"`
}

type Envelope_Route struct {
	Route *Route `protobuf:"bytes,3,opt,name=route,proto3,oneof"`
}

func (*Envelope_Register) isEnvelope_Kind() {}

func (*Envelope_Deregister) isEnvelope_Kind() {}

func (*Envelope_Route) isEnvelope_Kind() {}

type Register struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Srv6Endpoint  string                 `protobuf:"bytes,2,opt,name=srv6_endpoint,json=srv6Endpoint,proto3" json:"srv6_endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Register) Reset() {
	*x = Register{}
	mi := &file_remote_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register) ProtoMessage() {}

func (x *Register) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register.ProtoReflect.Descriptor instead.
func (*Register) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{1}
}

func (x *Register) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Register) GetSrv6Endpoint() string {
	if x != nil {
		return x.Srv6Endpoint
	}
	return ""
}

type Deregister struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Srv6Endpoint  string                 `protobuf:"bytes,2,opt,name=srv6_endpoint,json=srv6Endpoint,proto3" json:"srv6_endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Deregister) Reset() {
	*x = Deregister{}
	mi := &file_remote_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deregister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deregister) ProtoMessage() {}

func (x *Deregister) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deregister.ProtoReflect.Descriptor instead.
func (*Deregister) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{2}
}

func (x *Deregister) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Deregister) GetSrv6Endpoint() string {
	if x != nil {
		return x.Srv6Endpoint
	}
	return ""
}

type Route struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Srv6Endpoint  string                 `protobuf:"bytes,2,opt,name=srv6_endpoint,json=srv6Endpoint,proto3" json:"srv6_endpoint,omitempty"`
	Srv6Segments  []string               `protobuf:"bytes,3,rep,name=srv6_segments,json=srv6Segments,proto3" json:"srv6_segments,omitempty"`
	Status        Route_Status           `protobuf:"varint,4,opt,name=status,proto3,enum=remote.v1.Route_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Route) Reset() {
	*x = Route{}
	mi := &file_remote_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_remote_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_remote_proto_rawDescGZIP(), []int{3}
}

func (x *Route) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Route) GetSrv6Endpoint() string {
	if x != nil {
		return x.Srv6Endpoint
	}
	return ""
}

func (x *Route) GetSrv6Segments() []string {
	if x != nil {
		return x.Srv6Segments
	}
	return nil
}

func (x *Route) GetStatus() Route_Status {
	if x != nil {
		return x.Status
	}
	return Route_ADD
}

var File_remote_proto protoreflect.FileDescriptor

const file_remote_proto_rawDesc = "" +
	"\n" +
	"\fremote.proto\x12\tremote.v1\"\xa8\x01\n" +
	"\bEnvelope\x121\n" +
	"\bregister\x18\x01 \x01(\v2\x13.remote.v1.RegisterH\x00R\bregister\x127\n" +
	"\n" +
	"deregister\x18\x02 \x01(\v2\x15.remote.v1.DeregisterH\x00R\n" +
	"deregister\x12(\n" +
	"\x05route\x18\x03 \x01(\v2\x10.remote.v1.RouteH\x00R\x05routeB\x06\n" +
	"\x04kind\"I\n" +
	"\bRegister\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12#\n" +
	"\rsrv6_endpoint\x18\x02 \x01(\tR\fsrv6Endpoint\"K\n" +
	"\n" +
	"Deregister\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12#\n" +
	"\rsrv6_endpoint\x18\x02 \x01(\tR\fsrv6Endpoint\"\xbb\x01\n" +
	"\x05Route\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12#\n" +
	"\rsrv6_endpoint\x18\x02 \x01(\tR\fsrv6Endpoint\x12#\n" +
	"\rsrv6_segments\x18\x03 \x03(\tR\fsrv6Segments\x12/\n" +
	"\x06status\x18\x04 \x01(\x0e2\x17.remote.v1.Route.StatusR\x06status\"\x1d\n" +
	"\x06Status\x12\a\n" +
	"\x03ADD\x10\x00\x12\n" +
	"\n" +
	"\x06DELETE\x10\x01B9Z7github.com/datum-cloud/galactic-agent/api/remote;remoteb\x06proto3"

var (
	file_remote_proto_rawDescOnce sync.Once
	file_remote_proto_rawDescData []byte
)

func file_remote_proto_rawDescGZIP() []byte {
	file_remote_proto_rawDescOnce.Do(func() {
		file_remote_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_remote_proto_rawDesc), len(file_remote_proto_rawDesc)))
	})
	return file_remote_proto_rawDescData
}

var file_remote_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_remote_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_remote_proto_goTypes = []any{
	(Route_Status)(0),  // 0: remote.v1.Route.Status
	(*Envelope)(nil),   // 1: remote.v1.Envelope
	(*Register)(nil),   // 2: remote.v1.Register
	(*Deregister)(nil), // 3: remote.v1.Deregister
	(*Route)(nil),      // 4: remote.v1.Route
}
var file_remote_proto_depIdxs = []int32{
	2, // 0: remote.v1.Envelope.register:type_name -> remote.v1.Register
	3, // 1: remote.v1.Envelope.deregister:type_name -> remote.v1.Deregister
	4, // 2: remote.v1.Envelope.route:type_name -> remote.v1.Route
	0, // 3: remote.v1.Route.status:type_name -> remote.v1.Route.Status
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_remote_proto_init() }
func file_remote_proto_init() {
	if File_remote_proto != nil {
		return
	}
	file_remote_proto_msgTypes[0].OneofWrappers = []any{
		(*Envelope_Register)(nil),
		(*Envelope_Deregister)(nil),
		(*Envelope_Route)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_remote_proto_rawDesc), len(file_remote_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_remote_proto_goTypes,
		DependencyIndexes: file_remote_proto_depIdxs,
		EnumInfos:         file_remote_proto_enumTypes,
		MessageInfos:      file_remote_proto_msgTypes,
	}.Build()
	File_remote_proto = out.File
	file_remote_proto_goTypes = nil
	file_remote_proto_depIdxs = nil
}
